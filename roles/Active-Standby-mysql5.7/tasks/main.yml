---
# tasks file for mysql
- name: download mysql yum Repository
  get_url: url=http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm dest=/opt/mysql57-community-release-el7-10.noarch.rpm
  tags:
  - donwload mysql yum Repository

- name: install mysql yum Repository
  yum: name=/opt/mysql57-community-release-el7-10.noarch.rpm state=installed
  tags:
  - mysqlyumRepository

- name: installd mysql
  yum:
   name: 
    - mysql-community-server
    - mysql-community-devel
    - python-pip
    - python-devel
   state: latest 
   update_cache: yes

- name: update pip
  command: pip install --upgrade pip

- name: installed mysql-python
  pip: name=mysql-python state=latest

- name: Start Mysql service after install
  systemd:
      name: mysqld
      state: started

- name: reset mysql default password 
  shell: mysql_secret=$(grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}') && mysql -uroot --password=${mysql_secret} --connect-expired-password  -e 'set global validate_password_policy=LOW;set global validate_password_policy=0;set global validate_password_length=1;ALTER USER USER() IDENTIFIED BY "{{ mysql_root_password }}";' 

- name: create mysql datadir
  file: 
   path: "{{Mysql_datadir}}" 
   state: directory 
   owner: mysql 
   group: mysql

- name: create mysql logs
  file: 
   path: "{{Mysql_log}}"
   state: directory 
   owner: mysql 
   group: mysql

- name: stop Mysql
  systemd:
   name: mysqld
   state: stopped

- name: changed mysql datadir
  shell: mv  /var/lib/mysql/* {{Mysql_datadir}}

- name:  configfile MySQL MASTER
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
  when: mysql_role == "master"

- name:  configfile MySQL SLAVE
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
  when: mysql_role == "slave"

- name: Start Mysql service
  systemd:
      name: mysqld
      state: started

#- name: Create Application database
#  mysql_db:
#      name: "{{mysql_db}}"
#      login_user: "{{mysql_login_user}}"
#      login_password: "{{mysql_login_password}}"
#      state: present

- name: Create  slave user
  mysql_user:
      name: "{{mysql_repl_user}}"
      password: "{{mysql_repl_password}}"
      priv: '*.*:REPLICATION SLAVE,REPLICATION CLIENT,GRANT'
      host: "%"
      login_user: "{{mysql_root_user}}"
      login_password: "{{mysql_root_password}}"
      state: present
  when: mysql_role == "master"

- name: change master to
  mysql_replication:
     mode: changemaster
     master_host: "{{ master_ip }}"
     master_user: "{{mysql_repl_user}}"
     master_password: "{{mysql_repl_password}}"
     master_auto_position: yes
     login_user: "{{mysql_root_user}}"
     login_password: "{{ mysql_root_password }}"
  when: mysql_role == 'slave'

- name: start slave
  mysql_replication:
     mode: startslave
     login_user: "{{mysql_root_user}}"
     login_password: "{{ mysql_root_password }}"
  when: mysql_role == "slave"

- name: create db_backup directory
  file: path=/data/db_backup state=directory

- name: backup script
  template: src=mysql_db_backup.sh.j2 dest=/data/db_backup/mysql_db_backup.sh mode=0755

- name: cron backup script
  cron: minute=0 hour=2 day=* month=* weekday=* job='/bin/sh /data/db_backup/mysql_db_backup.sh'
  when: mysql_role == 'slave'
