---
# tasks file for Clustar-docker
- name: 安装依赖
  yum:
   name: ['yum-utils','device-mapper-persistent-data','lvm2','nfs-utils','rpcbind','ntp']
   state: latest
   update_cache: yes

- name: 安装yum源
  shell: yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

- name: 安装docker
  yum: name=docker-ce state=latest update_cache=yes

- name: start docker
  systemd: name=docker enabled=yes state=started

- name: stop docker
  service: name=docker state=stopped

- name: 修改docker数据目录
  command: mv /var/lib/docker "{{Docker_dir}}"

- name: 修改docker数据目录1
  file: src="{{Docker_dir}}/docker" dest=/var/lib/docker state=link

- name: start docker1
  systemd: name=docker state=started

- name: create scripts directory
  file: path=/nfs/deploy/docker-cert state=directory

- name: 复制免密脚本
  template: src=generate_dokcer_cert.sh.j2 dest=/nfs/deploy/docker-cert/generate_dokcer_cert.sh
  when: mysql_role == "master"


- name: 执行脚本
  shell: cd /nfs/deploy/docker-cert/ ; /bin/bash /nfs/deploy/docker-cert/generate_dokcer_cert.sh
  when: mysql_role == "master"

- name: 免密文件
  copy: src=/root/.ssh/id_rsa dest=/root/.ssh/id_rsa owner=root group=root mode=600
  when: mysql_role == "master"

- name: 修改ssh
  lineinfile: path=/etc/ssh/ssh_config regexp="^#   StrictHostKeyChecking" line="StrictHostKeyChecking no"
  when: mysql_role == "master"

- name: 复制免密文件
  shell: scp -r  /nfs/deploy/docker-cert/* "{{Locathost_IP}}:{{ Alone_docker_dir }}/Cluster-docker/files/"
  when: mysql_role == "master"

- name: create server-pem directory
  file: path=/etc/docker/server-pem state=directory

- name: copy ca.pem
  copy: src=ca.pem dest=/etc/docker/server-pem/ca.pem

- name: copy server-cert.pem 
  copy: src=server-cert.pem dest=/etc/docker/server-pem/server-cert.pem

- name: copy server-key.pem
  copy: src=server-key.pem dest=/etc/docker/server-pem/server-key.pem

- name: configure docker
  template: src=daemon.json.j2 dest=/etc/docker/daemon.json

- name: 修改启动service
  lineinfile: path=/usr/lib/systemd/system/docker.service regexp="^ExecStart=" line="ExecStart=/usr/bin/dockerd"

- name: systemctl daemon-reload
  systemd: daemon-reload=yes

- name: create .docker directory
  file: path=~/.docker state=directory

- name: copy ca.pem 客户端
  copy: src=ca.pem dest=/root/.docker/ca.pem

- name: copy cert.pem 客户端
  copy: src=cert.pem dest=/root/.docker/cert.pem

- name: copy key.pem 客户端
  copy: src=key.pem dest=/root/.docker/key.pem

- name: restart docker
  systemd: name=docker state=restarted

